
# **************************************************************************** #
#     * Upstream Servers :                                                     #
# **************************************************************************** #
upstream pgadmin_upstream {
    server pgadmin:80 max_fails=0 fail_timeout=10s;
    keepalive 512;
}

upstream auth_upstream {
    server auth_service:8000 max_fails=0 fail_timeout=10s;
    keepalive 512;
}

upstream profilem_upstream {
    server profilem_service:8000 max_fails=0 fail_timeout=10s;
    keepalive 512;
}

upstream chat_upstream {
    server message_delivery:8000 max_fails=0 fail_timeout=10s;
    keepalive 512;
}

upstream ws_upstream {
    server ws_gateway:8000 max_fails=0 fail_timeout=10s;
    keepalive 512;
}

upstream matchmaking_upstream {
    server matchmaking:8000 max_fails=0 fail_timeout=10s;
    keepalive 512;
}

upstream gameplay_upstream {
    server gameplay:8001 max_fails=0 fail_timeout=10s;
    keepalive 512;
}

# **************************************************************************** #
#     * Backend Server :                                                       #
# **************************************************************************** #
server {

    # === Server_Info : ========================================================
    listen 8080 ssl;
    listen [::]:8080 ssl;
    server_name 127.0.0.1;

    # === SSL Configuration : ==================================================
    ssl_certificate /etc/nginx/certs/pingo.crt;
    ssl_certificate_key /etc/nginx/certs/pingo.key;

    # === Pgadmin service : ====================================================
    location /pgadmin/ {

        rewrite ^/pgadmin/(.*)$ /$1 break;
        proxy_pass http://pgadmin_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Script-Name /pgadmin/;
    }

    # === Auth service : =======================================================
    location /auth/ {

        if ($request_method = OPTIONS) {

            add_header Access-Control-Allow-Origin "https://127.0.0.1";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 3600;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            add_header Vary Origin;
            return 204;
        }

        proxy_pass http://auth_upstream/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # === ProfileM service : ===================================================
    location /profile/ {
        if ($request_method = OPTIONS) {

            add_header Access-Control-Allow-Origin "https://127.0.0.1";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 3600;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            add_header Vary Origin;
            return 204;
        }

        auth_request /verify_token/;
        auth_request_set $user_id $upstream_http_x_user_id;
        auth_request_set $user_name $upstream_http_x_user_username;

        proxy_pass http://profilem_upstream/;
        proxy_set_header Host $http_host;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Username $user_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # === Message service : ===================================================
    location /chat/ {
        if ($request_method = OPTIONS) {

            add_header Access-Control-Allow-Origin "https://127.0.0.1";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 3600;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            add_header Vary Origin;
            return 204;
        }

        auth_request /verify_token/;
        auth_request_set $user_id $upstream_http_x_user_id;
        auth_request_set $user_name $upstream_http_x_user_username;

        proxy_pass http://chat_upstream/;
        proxy_set_header Host $http_host;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Username $user_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Script-Name /chat/;
    }

    # === Websocket service : ==================================================
    location /ws/ {

        set $access_token $arg_token;

        auth_request /verify_token/;
        auth_request_set $user_id $upstream_http_x_user_id;
        auth_request_set $user_name $upstream_http_x_user_username;

        proxy_pass http://ws_upstream;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Username $user_name;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
    }


    # === Matchmaking service : ================================================
    location /matchmaking/ {

        set $access_token $arg_token;

        auth_request /verify_token/;
        auth_request_set $user_id $upstream_http_x_user_id;
        auth_request_set $user_name $upstream_http_x_user_username;

        proxy_pass http://matchmaking_upstream/;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Username $user_name;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
    }

    # === Gameplay service : ================================================
    location /gameplay/ {

        set $access_token $arg_token;

        auth_request /verify_token/;
        auth_request_set $user_id $upstream_http_x_user_id;
        auth_request_set $user_name $upstream_http_x_user_username;

        proxy_pass http://gameplay_upstream/;
        proxy_set_header X-User-Id $user_id;
        proxy_set_header X-User-Username $user_name;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
    }


    # === verify token [internal] : ============================================
    location /verify_token/ {

        internal;

        if ($http_authorization = "") {
            set $http_authorization "Bearer $access_token";
        }

        proxy_pass http://auth_upstream/verify_token/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }
}
